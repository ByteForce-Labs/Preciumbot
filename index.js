const { Telegraf, Markup } = require("telegraf");
const path = require("path");
const axios = require("axios");

// Replace 'YOUR_BOT_TOKEN' with your actual bot token
const bot = new Telegraf("7404242733:AAEfwxDPbBwtDWly7kLOdmOeL3_sT9BRIVI");

// Helper function to get the image path
const imagePath = (fileName) => path.join(__dirname, "images", fileName);

// Function to register the user
const registerUser = async (userId, username, inviterUsername = "") => {
  try {
    const response = await axios.post("https://ton-diamonddb.onrender.com/api/ton-diamond/register", {
      userId,
      inviterUsername,
      username,
    });
    return response.data;
  } catch (error) {
    console.error('Error registering user:', error);
    throw error;
  }
};

bot.start(async (ctx) => {
  const userId = ctx.from.username;
  const username = ctx.from.username || "there";
  //const inviterUsername = ctx.startPayload || ""; // Extract inviter username from start payload if available

  try {
   // await registerUser(userId, username, inviterUsername);
    ctx.replyWithPhoto(
      { source: imagePath("favour.jpg") },
      {
        caption: `*Welcome, @${username}! to Ton Diamond ðŸ’Ž*\n\nYou now are now a Builder on Ton Blockchain and can entitled to revenues generated by \n*Ton DiamondðŸ’ŽðŸ’Ž!!*`,
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "Play",
                web_app: { url: "https://blumfork.vercel.app/" },
              },
              { text: "Join community", callback_data: "favour.jpg" },
            ],
          ],
        },
      }
    );
  } catch (error) {
    ctx.reply('Welcome Back!');
  }
});

bot.launch();